apply plugin: 'io.spring.convention.docs'
apply plugin: 'io.spring.convention.management-configuration'
apply plugin: 'io.spring.convention.dependency-set'
apply plugin: 'io.spring.convention.repository'
apply plugin: 'java'

asciidoctor {
	attributes([stylesheet: 'css/style.css'])
	resources {
		from(sourceDir) {
			include "css/**"
		}
	}
}

asciidoctorj {
	def docsTag = snapshotBuild ? 'current' : project.version
	def ghTag = snapshotBuild ? 'main' : project.version
	def ghUrl = "https://github.com/spring-projects/spring-security/tree/$ghTag"
	def ghOldSamplesUrl = "https://github.com/spring-projects/spring-security/tree/5.4.x/samples"
	def ghSamplesUrl = "https://github.com/spring-projects/spring-security-samples/tree/$samplesBranch"
	def securityDocsUrl = "https://docs.spring.io/spring-security/site/docs/$docsTag"
	def securityApiUrl = "$securityDocsUrl/api/"
	def securityReferenceUrl = "$securityDocsUrl/reference/html5/"
	def springFrameworkApiUrl = "https://docs.spring.io/spring-framework/docs/$springFrameworkVersion/javadoc-api/"
	def springFrameworkReferenceUrl = "https://docs.spring.io/spring-framework/docs/$springFrameworkVersion/reference/html/"
	attributes 'spring-security-version' : project.version,
		'spring-boot-version' : springBootVersion,
		revnumber : project.version,
		'gh-url': ghUrl,
		'gh-samples-url': ghSamplesUrl,
		'gh-old-samples-url': ghOldSamplesUrl,
		'security-api-url': securityApiUrl,
		'security-reference-url': securityReferenceUrl,
		'spring-framework-api-url': springFrameworkApiUrl,
		'spring-framework-reference-url': springFrameworkReferenceUrl
	attributeProvider resolvedVersions(project.configurations.testRuntimeClasspath)
}

docsZip {
	from(project(':spring-security-docs-guides').asciidoctor) {
		into 'guides'
	}
}

dependencies {
	management platform(project(":spring-security-dependencies"))
	testImplementation "com.unboundid:unboundid-ldapsdk"
	testImplementation "org.apache.directory.server:apacheds-core"
	testImplementation "org.springframework:spring-core"
}

def resolvedVersions(Configuration configuration) {
	return {
		configuration.resolvedConfiguration
			.resolvedArtifacts
			.collectEntries { [(it.name + "-version"): it.moduleVersion.id.version] }
	}
}

repositories {
	maven { url "https://repo.spring.io/release" }
}
